{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","populateCats","breed_id","setState","selectedBreed","page","state","options","headers","process","REACT_APP_CAT_API_KEY","params","order","limit","console","log","axios","get","then","response","cats","data","canLoadMore","length","onSelectBreed","event","target","value","onClick","breed","breeds","isLoading","className","Container","Row","Col","md","span","sm","Form","Group","controlId","Label","Control","as","custom","onChange","this","disabled","map","id","name","cat","Card","style","width","Img","variant","src","url","Body","Button","block","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1770e35a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.scss';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\ninterface Breed {\n  id: string;\n  name: string;\n  origin: string;\n  description: string;\n  temperament: string;\n}\n\ninterface CatDetails {\n  id: string;\n  url: string;\n  breeds: Array<Breed>\n}\n\ninterface Props {}\n\ninterface State {\n  breeds: Array<Breed>\n  selectedBreed: string\n  cats: Array<CatDetails>,\n  page: number,\n  isLoading: boolean,\n  canLoadMore: boolean\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      breeds: [],\n      selectedBreed: 'DEFAULT',\n      cats: [],\n      page: 0,\n      isLoading: true,\n      canLoadMore: true\n    };\n  }\n  populateCats = (breed_id: string) => {\n    this.setState(\n      { selectedBreed: breed_id, page: this.state.page + 1 },\n      () => {\n        const options = {\n          headers: { 'x-api-key': process.env.REACT_APP_CAT_API_KEY },\n          params: { breed_id: this.state.selectedBreed, order: 'asc', limit: 5, page: this.state.page }\n        };\n        console.log(options);\n        axios.get('https://api.thecatapi.com/v1/images/search', options)\n          .then((response) => {\n            this.setState({ cats: [...this.state.cats, ...response.data], canLoadMore: response.data.length !== 0 });\n          });\n      }\n    );\n  }\n  onSelectBreed = (event: React.ChangeEvent<any>) => {\n    const breed_id = event.target.value;\n    this.setState(\n      { cats: [], page: 0 },\n      () => {\n        this.populateCats(breed_id);\n      }\n    );\n  }\n  onClick = (breed: Breed) => {\n    console.log(breed);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col><h1>Cat Browser</h1></Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 3 }} sm={{ span: 6 }}>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Breed</Form.Label>\n                  <Form.Control as=\"select\" custom onChange={this.onSelectBreed} value={ this.state.selectedBreed}>\n                    <option value=\"DEFAULT\" disabled>Select breed</option>\n                    {this.state.breeds.map((breed: Breed) => (\n                      <option key={breed.id} value={breed.id}>{breed.name}</option>\n                    ))} \n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            {this.state.cats.map((cat: CatDetails) => (\n            <Col md={{ span: 3 }} sm={{ span: 6}} key={cat.id}>\n              <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={cat.url} />\n                <Card.Body>\n                  <Button variant=\"primary\" block onClick={() => this.onClick(cat.breeds[0])}>View details</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n            ))}\n          </Row>\n          { this.state.canLoadMore ?\n          <Row>\n            <Col>\n              <Button\n                variant=\"success\"\n                onClick={() => this.populateCats(this.state.selectedBreed) }\n                disabled={this.state.isLoading || this.state.cats.length === 0}\n              >\n                {this.state.isLoading ? 'Loading catsâ€¦' : 'Load more'}\n              </Button>{' '}\n            </Col>\n          </Row> : null\n          }\n        </Container>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const options = {\n      headers: {'x-api-key': process.env.REACT_APP_CAT_API_KEY}\n    };\n    axios.get('https://api.thecatapi.com/v1/breeds', options)\n      .then((response) => {\n        this.setState({ breeds: response.data, isLoading: false });\n      });\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}