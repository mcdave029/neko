{"version":3,"sources":["components/SelectionForm.tsx","components/CatImage.tsx","components/ActionRow.tsx","redux/breed/BreedTypes.tsx","redux/breed/BreedActions.tsx","redux/cat/CatTypes.tsx","redux/cat/CatActions.tsx","cats/Index.tsx","redux/index.tsx","cats/Show.tsx","App.tsx","reportWebVitals.ts","redux/breed/BreedReducer.tsx","redux/cat/CatReducer.tsx","redux/store.tsx","index.tsx"],"names":["SelectionForm","Form","Group","controlId","Label","Control","as","custom","onChange","this","props","wasChanged","value","selectedBreed","disabled","breeds","length","map","breed","id","name","Component","CatImage","Col","md","span","sm","Card","className","Img","variant","src","catDetails","url","Body","to","ActionRow","Row","Button","isLoading","isDisabled","onClick","wasClicked","FETCH_BREEDS_REQUEST","FETCH_BREEDS_SUCCESS","FETCH_BREEDS_FAILURE","SELECT_BREED","fetchBreedsFailure","error","type","payload","fetchBreeds","dispatch","axios","get","headers","process","then","response","data","catch","message","FETCH_CATS_REQUEST","FETCH_CATS_SUCCESS","FETCH_CATS_FAILURE","INCREMENT_PAGINATION_PAGE","SELECTED_BREED_CHANGE","fetchCatsFailure","fetchCats","breed_id","page","options","params","order","limit","cats","Index","onSelectBreed","event","a","target","selectBreed","selectedBreedChange","paginationPage","Container","hasError","Alert","onClose","clearError","dismissible","cat","canLoadMore","loading","connect","state","Show","Header","Title","origin","temperament","Text","description","setState","image_id","match","find","fetchCatImage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","combineReducers","breedReducer","catReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c36725e5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Breed } from \"../interfaces\";\n\ninterface Props {\n  wasChanged: (event: React.ChangeEvent<any>) => void;\n  selectedBreed: string;\n  breeds: Array<Breed>;\n}\n\nexport default class SelectionForm extends Component<Props> {\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"breedSelection\">\n          <Form.Label>Breed</Form.Label>\n          <Form.Control\n            as=\"select\"\n            custom\n            onChange={this.props.wasChanged}\n            value={this.props.selectedBreed}\n            disabled={this.props.breeds.length === 0}\n          >\n            <option value=\"DEFAULT\" disabled>\n              Select breed\n            </option>\n            {this.props.breeds.map((breed: Breed) => (\n              <option key={breed.id} value={breed.id}>\n                {breed.name}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport { CatDetails } from \"../interfaces\";\n\ninterface Props {\n  catDetails: CatDetails;\n}\n\nexport default class CatImage extends Component<Props> {\n  render() {\n    return (\n      <Col md={{ span: 3 }} sm={{ span: 6 }}>\n        <Card className=\"mb-3\">\n          <Card.Img variant=\"top\" src={this.props.catDetails.url} />\n          <Card.Body>\n            <Link\n              to={\"/neko/\" + this.props.catDetails.id}\n              className=\"btn btn-primary btn-block\"\n            >\n              View details\n            </Link>\n          </Card.Body>\n        </Card>\n      </Col>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\ninterface Props {\n  isLoading: boolean;\n  isDisabled: boolean;\n  wasClicked: () => void;\n}\n\nexport default class ActionRow extends Component<Props> {\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Button\n            variant=\"success\"\n            disabled={this.props.isLoading || this.props.isDisabled}\n            onClick={this.props.wasClicked}\n            className=\"mt-3\"\n          >\n            {this.props.isLoading ? \"Loading cats…\" : \"Load more\"}\n          </Button>{\" \"}\n        </Col>\n      </Row>\n    );\n  }\n}\n","export const FETCH_BREEDS_REQUEST = 'FETCH_BREEDS_REQUEST'\nexport const FETCH_BREEDS_SUCCESS = 'FETCH_BREEDS_SUCCESS'\nexport const FETCH_BREEDS_FAILURE = 'FETCH_BREEDS_FAILURE'\nexport const SELECT_BREED = 'SELECT_BREED'\n","import {\n  FETCH_BREEDS_REQUEST,\n  FETCH_BREEDS_SUCCESS,\n  FETCH_BREEDS_FAILURE,\n  SELECT_BREED\n} from './BreedTypes'\nimport { Breed } from '../../interfaces';\nimport { AppDispatch } from '../../redux/store';\nimport axios from 'axios';\n\nexport const fetchBreedsRequest = () => {\n  return {\n    type: FETCH_BREEDS_REQUEST\n  }\n}\n\nexport const fetchBreedsSuccess = (breeds: Array<Breed>) => {\n  return {\n    type: FETCH_BREEDS_SUCCESS,\n    payload: breeds\n  }\n}\n\nexport const fetchBreedsFailure = (error: string) => {\n  return {\n    type: FETCH_BREEDS_FAILURE,\n    payload: error\n  }\n}\n\nexport const selectBreed = (breed_id: string) => {\n  return {\n    type: SELECT_BREED,\n    payload: breed_id\n  }\n}\n\nexport const fetchBreeds = () => {\n  return (dispatch: AppDispatch) => {\n    dispatch(fetchBreedsRequest())\n    const options = {\n      headers: {'x-api-key': process.env.REACT_APP_CAT_API_KEY}\n    };\n    axios.get('https://api.thecatapi.com/v1/breeds', options)\n      .then(response => {\n        dispatch(fetchBreedsSuccess(response.data))\n      })\n      .catch(error => {\n        dispatch(fetchBreedsFailure(error.message))\n      })\n  }\n} \n","export const FETCH_CATS_REQUEST = 'FETCH_CATS_REQUEST'\nexport const FETCH_CATS_SUCCESS = 'FETCH_CATS_SUCCESS'\nexport const FETCH_CATS_FAILURE = 'FETCH_CATS_FAILURE'\nexport const INCREMENT_PAGINATION_PAGE = 'INCREMENT_PAGINATION_PAGE'\nexport const SELECTED_BREED_CHANGE = 'SELECTED_BREED_CHANGE' \n","import {\n  FETCH_CATS_REQUEST,\n  FETCH_CATS_SUCCESS,\n  FETCH_CATS_FAILURE,\n  INCREMENT_PAGINATION_PAGE,\n  SELECTED_BREED_CHANGE\n} from './CatTypes'\nimport { CatDetails } from '../../interfaces';\nimport { AppDispatch } from '../../redux/store';\nimport axios from 'axios';\n\nexport const fetchCatsRequest = () => {\n  return {\n    type: FETCH_CATS_REQUEST\n  }\n}\n\nexport const fetchCatsSuccess = (cats: Array<CatDetails>) => {\n  return {\n    type: FETCH_CATS_SUCCESS,\n    payload: cats\n  }\n}\n\nexport const fetchCatsFailure = (error: string) => {\n  return {\n    type: FETCH_CATS_FAILURE,\n    payload: error\n  }\n}\n\nexport const incrementPaginationPage = () => {\n  return {\n    type: INCREMENT_PAGINATION_PAGE\n  }\n}\n\nexport const selectedBreedChange = () => {\n  return {\n    type: SELECTED_BREED_CHANGE\n  }\n}\n\nexport const fetchCats = (breed_id: string, page: number) => {\n  return (dispatch: AppDispatch) => {\n    const options = {\n      headers: { 'x-api-key': process.env.REACT_APP_CAT_API_KEY },\n      params: { breed_id: breed_id, order: 'asc', limit: 5, page: page }\n    };\n    axios.get('https://api.thecatapi.com/v1/images/search', options)\n      .then(response => {\n        dispatch(fetchCatsSuccess(response.data))\n        dispatch(incrementPaginationPage())\n      })\n      .catch(error => {\n        dispatch(fetchCatsFailure(error.message))\n      })\n  }\n}\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SelectionForm from \"../components/SelectionForm\";\nimport CatImage from \"../components/CatImage\";\nimport ActionRow from \"../components/ActionRow\";\nimport { Breed, CatDetails } from \"../interfaces\";\nimport {\n  selectBreed,\n  selectedBreedChange,\n  fetchBreeds,\n  fetchCats,\n  clearError,\n} from \"../redux\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nimport Alert from \"react-bootstrap/Alert\";\n\ninterface Props {\n  loading: boolean;\n  breeds: Breed[];\n  cats: CatDetails[];\n  hasError: boolean;\n  selectedBreed: string;\n  paginationPage: number;\n  canLoadMore: boolean;\n  selectBreed: (breed_id: string) => void;\n  selectedBreedChange: () => void;\n  fetchBreeds: () => void;\n  fetchCats: (breed_id: string, page: number) => void;\n  clearError: () => void;\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    loading: state.breed.loading || state.cat.loading,\n    breeds: state.breed.breeds,\n    cats: state.cat.cats,\n    hasError: state.breed.error.length !== 0 || state.cat.error.length !== 0,\n    selectedBreed: state.breed.selectedBreed,\n    paginationPage: state.cat.paginationPage,\n    canLoadMore: state.cat.canLoadMore,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    selectBreed: (breed_id: string) => dispatch(selectBreed(breed_id)),\n    selectedBreedChange: () => dispatch(selectedBreedChange()),\n    fetchBreeds: () => dispatch(fetchBreeds()),\n    fetchCats: (breed_id: string, page: number) =>\n      dispatch(fetchCats(breed_id, page)),\n    clearError: () => dispatch(clearError()),\n  };\n};\n\nclass Index extends Component<Props> {\n  onSelectBreed = async (event: React.ChangeEvent<any>) => {\n    const breed_id = event.target.value;\n    await this.props.selectBreed(breed_id);\n    await this.props.selectedBreedChange();\n    this.props.fetchCats(this.props.selectedBreed, this.props.paginationPage);\n  };\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"mt-3\">Cat Browser</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ span: 3 }} sm={{ span: 6 }}>\n            <SelectionForm\n              wasChanged={this.onSelectBreed}\n              selectedBreed={this.props.selectedBreed}\n              breeds={this.props.breeds}\n            />\n          </Col>\n        </Row>\n        {this.props.hasError && (\n          <Row>\n            <Col>\n              <Alert\n                variant=\"danger\"\n                onClose={() => this.props.clearError()}\n                dismissible\n              >\n                Apologies but we could not load new cats for you at this time!\n                Miau!\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          {this.props.cats.length > 0 ? (\n            this.props.cats.map((cat: CatDetails) => (\n              <CatImage catDetails={cat} key={cat.id} />\n            ))\n          ) : (\n            <Col>No cats available</Col>\n          )}\n        </Row>\n        {this.props.canLoadMore ? (\n          <ActionRow\n            isLoading={this.props.loading}\n            isDisabled={this.props.cats.length === 0}\n            wasClicked={() =>\n              this.props.fetchCats(\n                this.props.selectedBreed,\n                this.props.paginationPage\n              )\n            }\n          />\n        ) : null}\n      </Container>\n    );\n  }\n\n  componentDidMount() {\n    this.props.fetchBreeds();\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n","import { AppDispatch } from \"./store\";\nimport { fetchBreedsFailure } from \"../redux/breed/BreedActions\";\nimport { fetchCatsFailure } from \"../redux/cat/CatActions\";\n\nexport { selectBreed, fetchBreeds } from \"../redux/breed/BreedActions\";\nexport { fetchCats, selectedBreedChange } from \"../redux/cat/CatActions\";\n\nexport const clearError = () => {\n  return (dispatch: AppDispatch) => {\n    dispatch(fetchBreedsFailure(\"\"));\n    dispatch(fetchCatsFailure(\"\"));\n  };\n};\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./Show.scss\";\nimport { Link } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\nimport { CatDetails } from \"../interfaces\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Alert from \"react-bootstrap/Alert\";\n\ninterface Props {\n  match: {\n    params: { id: string };\n  };\n  cats: CatDetails[];\n}\n\ninterface State {\n  catDetails?: CatDetails;\n  hasError: boolean;\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cats: state.cat.cats,\n  };\n};\n\nclass Show extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n  render() {\n    return (\n      <Container>\n        {this.state?.catDetails != null ? (\n          <Card className=\"mt-3 mb-3\">\n            <Card.Header>\n              <Link to=\"/neko\" className=\"btn btn-primary\">\n                Back\n              </Link>\n            </Card.Header>\n            <Card.Img variant=\"top\" src={this.state?.catDetails?.url} />\n            <Card.Body>\n              <Card.Title>{this.state?.catDetails?.breeds[0].name}</Card.Title>\n              <h6>Origin: {this.state?.catDetails?.breeds[0].origin}</h6>\n              <h6>{this.state?.catDetails?.breeds[0].temperament}</h6>\n              <Card.Text>\n                {this.state?.catDetails?.breeds[0].description}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ) : (\n          <h3 className=\"center-fixed\">Loading...</h3>\n        )}\n        {this.state.hasError && (\n          <Alert\n            variant=\"danger\"\n            className=\"mt-3\"\n            onClose={() => this.setState({ hasError: false })}\n            dismissible\n          >\n            Apologies but we could not load new cats for you at this time! Miau!\n            <hr />\n            <div className=\"d-flex justify-content-end\">\n              <Link to=\"/neko\" className=\"btn btn-outline-danger\">\n                Back\n              </Link>\n            </div>\n          </Alert>\n        )}\n      </Container>\n    );\n  }\n\n  fetchCatImage() {\n    const image_id = this.props.match.params.id;\n    const options = {\n      headers: { \"x-api-key\": process.env.REACT_APP_CAT_API_KEY },\n      params: { image_id: image_id },\n    };\n    axios\n      .get(\"https://api.thecatapi.com/v1/images/\" + image_id, options)\n      .then((response) => {\n        this.setState({ catDetails: response.data });\n      })\n      .catch((error) => {\n        this.setState({ hasError: true });\n      });\n  }\n\n  componentDidMount() {\n    const catDetails = this.props.cats.find(\n      (cat) => cat.id === this.props.match.params.id\n    );\n    if (catDetails == null) {\n      this.fetchCatImage();\n    } else {\n      this.setState({ catDetails: catDetails });\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(Show);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Index from './cats/Index';\nimport Show from './cats/Show';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/neko\" component={Index} />\n            <Route path=\"/neko/:id\" component={Show} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FETCH_BREEDS_REQUEST,\n  FETCH_BREEDS_SUCCESS,\n  FETCH_BREEDS_FAILURE,\n  SELECT_BREED\n} from './BreedTypes'\nimport { BreedState, ActionType } from '../../interfaces';\n\nconst initialState: BreedState = {\n  loading: false,\n  breeds: [],\n  error: '',\n  selectedBreed: 'DEFAULT'\n}\n\nconst reducer = (state: BreedState = initialState, action: ActionType): BreedState => {\n  switch(action.type) {\n    case FETCH_BREEDS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case FETCH_BREEDS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        breeds: action.payload,\n        error: ''\n      }\n    case FETCH_BREEDS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        breeds: [],\n        error: action.payload\n      }\n    case SELECT_BREED:\n      return {\n        ...state,\n        selectedBreed: action.payload\n      }\n    default: return { ...state }\n  }\n}\n\nexport default reducer\n","import {\n  FETCH_CATS_REQUEST,\n  FETCH_CATS_SUCCESS,\n  FETCH_CATS_FAILURE,\n  INCREMENT_PAGINATION_PAGE,\n  SELECTED_BREED_CHANGE,\n} from './CatTypes'\nimport { CatState, ActionType } from '../../interfaces';\n\nconst initialState: CatState = {\n  loading: false,\n  cats: [],\n  error: '',\n  paginationPage: 1,\n  canLoadMore: true\n}\n\nconst reducer = (state: CatState = initialState, action: ActionType): CatState => {\n  switch(action.type) {\n    case FETCH_CATS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case FETCH_CATS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        cats: [...state.cats, ...action.payload],\n        error: '',\n        canLoadMore: action.payload.length > 0\n      }\n    case FETCH_CATS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        cats: [],\n        error: action.payload\n      }\n    case INCREMENT_PAGINATION_PAGE:\n      return {\n        ...state,\n        paginationPage: state.paginationPage + 1\n      }\n    case SELECTED_BREED_CHANGE:\n      return {\n        ...state,\n        cats: [],\n        paginationPage: 1,\n        canLoadMore: true\n      }\n    default: return { ...state }\n  }\n}\n\nexport default reducer\n","import {\n  createStore,\n  applyMiddleware,\n  Store,\n  Dispatch,\n  combineReducers,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport breedReducer from \"./breed/BreedReducer\";\nimport catReducer from \"./cat/CatReducer\";\nimport { BreedState, CatState, ActionType } from \"../interfaces\";\n\ninterface CombineState {\n  breed: BreedState;\n  cat: CatState;\n}\n\nconst store: Store<CombineState, ActionType> & {\n  dispatch: Dispatch;\n} = createStore(\n  combineReducers({\n    breed: breedReducer,\n    cat: catReducer,\n  }),\n  applyMiddleware(thunk)\n);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\nreportWebVitals();\n"],"sourceRoot":""}